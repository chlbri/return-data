{"version":3,"file":"rd.cjs","sources":["../src/rd.ts"],"sourcesContent":["import {\n  isClientError,\n  isInformation,\n  isPermission,\n  isRedirect,\n  isServer,\n  isSuccess,\n  isTimeout,\n} from './functions';\nimport type {\n  ClientErrorFunction,\n  InformationFunction,\n  PermissionErrorFunction,\n  PromiseRD,\n  RD,\n  RedirectFunction,\n  ReturnDataChainAsync,\n  ReturnDataChainSync,\n  ReturnDataMap,\n  ReturnDataMaybeMap,\n  ReturnDataObject,\n  ReturnDataRenewAsync,\n  ReturnDataRenewSync,\n  ReturnDataSuccessMap,\n  ServerFunction,\n  Status,\n  SuccessFunction,\n  TimeoutFunction,\n} from './types';\n\nexport const defaultError = () => {\n  throw new Error();\n};\n\ntype FunctionRDwithReturn<T = any, R = any> = (\n  status: Status,\n  payload?: T,\n) => RD<R>;\ntype FunctionRD<T = any> = FunctionRDwithReturn<T, T>;\n\ntype FunctionPromiseRDwithReturn<T = any, R = any> = (\n  status: Status,\n  payload?: T,\n) => PromiseRD<R>;\ntype FunctionPromiseRD<T = any> = FunctionPromiseRDwithReturn<T, T>;\n\nexport class ReturnData<T = any, S extends Status = Status> {\n  constructor(private data: ReturnDataObject<T, S>) {}\n\n  // #region Checkers\n\n  get isClienError(): boolean {\n    return isClientError(this.data);\n  }\n\n  get isInformation(): boolean {\n    return isInformation(this.data);\n  }\n\n  get isPermission(): boolean {\n    return isPermission(this.data);\n  }\n\n  get isRedirect(): boolean {\n    return isRedirect(this.data);\n  }\n\n  get isServerError(): boolean {\n    return isServer(this.data);\n  }\n\n  get isSuccess(): boolean {\n    return isSuccess(this.data);\n  }\n\n  get isTimeoutError(): boolean {\n    return isTimeout(this.data);\n  }\n  // #endregion\n\n  get hasData(): boolean {\n    return (\n      this.isInformation ||\n      this.isPermission ||\n      this.isRedirect ||\n      this.isSuccess\n    );\n  }\n\n  get status(): Status {\n    return this.data.status;\n  }\n\n  // #region Mappers\n\n  map<R>({\n    information,\n    client,\n    permission,\n    redirect,\n    server,\n    success,\n    timeout,\n  }: ReturnDataMap<T, R>): R {\n    const data = this.data;\n\n    // #region Checkers\n\n    if (isInformation(data)) {\n      data.payload;\n      return information(data.status, data.payload, data.messages);\n    }\n\n    if (isPermission(data)) {\n      return permission(data.status, data.payload, data.notPermitteds);\n    }\n\n    if (isRedirect(data)) {\n      return redirect(data.status, data.payload, data.messages);\n    }\n\n    if (isServer(data)) {\n      return server(data.status, data.messages);\n    }\n\n    if (isSuccess(data)) {\n      return success(data.status, data.payload);\n    }\n\n    if (isTimeout(data)) {\n      return timeout(data.status);\n    }\n\n    // #endregion\n\n    return client(data.status, data.messages);\n  }\n\n  maybeMap<R>(cases: ReturnDataMaybeMap<T, R>): R {\n    // #region Cases\n\n    const client =\n      ((cases as any).client as ClientErrorFunction<R>) ?? cases.else;\n\n    const information =\n      ((cases as any).information as InformationFunction<T, R>) ??\n      cases.else;\n\n    const permission =\n      ((cases as any).permission as PermissionErrorFunction<T, R>) ??\n      cases.else;\n\n    const redirect =\n      ((cases as any).redirect as RedirectFunction<T, R>) ?? cases.else;\n\n    const server =\n      ((cases as any).server as ServerFunction<R>) ?? cases.else;\n\n    const success =\n      ((cases as any).success as SuccessFunction<T, R>) ?? cases.else;\n\n    const timeout =\n      ((cases as any).timeout as TimeoutFunction<R>) ?? cases.else;\n\n    // #endregion\n\n    return this.map({\n      client,\n      information,\n      permission,\n      redirect,\n      server,\n      success,\n      timeout,\n    });\n  }\n\n  successMap<R>(cases: ReturnDataSuccessMap<T, R>): R {\n    // #region Cases\n\n    const information = cases.information ?? defaultError;\n    const permission = cases.permission ?? defaultError;\n    const redirect = cases.redirect ?? defaultError;\n    const server = cases.server ?? defaultError;\n    const success = cases.success;\n    const timeout = cases.timeout ?? defaultError;\n    const client = cases.client ?? defaultError;\n\n    // #endregion\n\n    return this.map({\n      client,\n      information,\n      permission,\n      redirect,\n      server,\n      success,\n      timeout,\n    });\n  }\n\n  // #endregion\n\n  // #region Chain\n\n  private _chainSync({\n    information,\n    permission,\n    redirect,\n    success,\n  }: ReturnDataChainSync<T>): RD<T> {\n    return this.map({\n      success: (...args) => {\n        return success(...args);\n      },\n      information: (status, payload, messages) => {\n        const out = information(status, payload, messages);\n        return out.map({\n          success() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          information(status, _, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          redirect(status, _, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          permission(status, _, notPermitteds, messages) {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n          client(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          timeout() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          server(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n        });\n      },\n      redirect: (status, payload, messages) => {\n        const out = redirect(status, payload, messages);\n        return out.map({\n          success() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          information(_, __, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          redirect(status, _, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          permission(status, _, notPermitteds, messages) {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n          client(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          timeout() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          server(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n        });\n      },\n      permission: (status, payload, notPermitteds, messages) => {\n        const out = permission(status, payload, notPermitteds, messages);\n        return out.maybeMap({\n          success() {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n          else() {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n        });\n      },\n      client: () => this,\n      timeout: () => this,\n      server: () => this,\n    });\n  }\n\n  chainSync(args: ReturnDataChainSync<T> | RD<T> | FunctionRD<T>): RD<T> {\n    if (args instanceof ReturnData) {\n      return this._chainSync({\n        information: () => args,\n        permission: () => args,\n        redirect: () => args,\n        success: () => args,\n      });\n    }\n    if (args instanceof Function) {\n      return this._chainSync({\n        information: args,\n        permission: args,\n        redirect: args,\n        success: args,\n      });\n    }\n\n    return this._chainSync(args);\n  }\n\n  private _chainAsync({\n    information,\n    permission,\n    redirect,\n    success,\n  }: ReturnDataChainAsync<T>): PromiseRD<T> {\n    return this.map({\n      success: (...args) => success(...args),\n      information: async (status, payload, messages) => {\n        const out = await information(status, payload, messages);\n        return out.successMap({\n          success() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          information(status, _, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          redirect(status, _, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          permission(status, _, notPermitteds, messages) {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n          client(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          timeout() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          server(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n        });\n      },\n      redirect: async (status, payload, messages) => {\n        const out = await redirect(status, payload, messages);\n        return out.map({\n          success() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          information(_, __, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          redirect(status, _, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          permission(status, _, notPermitteds, messages) {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n          client(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          timeout() {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n          server(_, messages) {\n            return new ReturnData<T>({ status, payload, messages });\n          },\n        });\n      },\n      permission: async (status, payload, notPermitteds, messages) => {\n        const out = await permission(\n          status,\n          payload,\n          notPermitteds,\n          messages,\n        );\n        return out.maybeMap({\n          success() {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n          else() {\n            return new ReturnData<T>({\n              status,\n              payload,\n              notPermitteds,\n              messages,\n            });\n          },\n        });\n      },\n      client: async () => this as RD<T, any>,\n      timeout: async () => this as RD<T, any>,\n      server: async () => this as RD<T, any>,\n    });\n  }\n\n  chainAsync(\n    args: ReturnDataChainAsync<T> | FunctionPromiseRD<T> | PromiseRD<T>,\n  ): PromiseRD<T> {\n    if (args instanceof Function) {\n      return this._chainAsync({\n        information: args,\n        permission: args,\n        redirect: args,\n        success: args,\n      });\n    }\n    if (args instanceof Promise) {\n      return this._chainAsync({\n        information: () => args,\n        permission: () => args,\n        redirect: () => args,\n        success: () => args,\n      });\n    }\n\n    return this._chainAsync(args);\n  }\n\n  // #endregion\n\n  // #region Renews\n\n  private _renewSync<R>({\n    information,\n    permission,\n    redirect,\n    success,\n  }: ReturnDataRenewSync<T, R>): RD<R> {\n    return this.map({\n      success: (...args) => {\n        return success(...args);\n      },\n      information: (status, payload, messages) => {\n        const out = information(status, payload, messages);\n        return out.maybeMap({\n          success(_, payload) {\n            return new ReturnData({ status, payload, messages });\n          },\n          else() {\n            return out;\n          },\n        });\n      },\n      redirect: (status, payload, messages) => {\n        const out = redirect(status, payload, messages);\n        return out.maybeMap({\n          success(_, payload) {\n            return new ReturnData({ status, payload, messages });\n          },\n          else() {\n            return out;\n          },\n        });\n      },\n      permission,\n      client: () => new ReturnData<R, Status>({ status: 400 }),\n      timeout: () => new ReturnData<R, Status>({ status: 900 }),\n      server: () => new ReturnData<R, Status>({ status: 500 }),\n    });\n  }\n\n  renewSync<R>(\n    args: ReturnDataRenewSync<T, R> | RD<R> | FunctionRDwithReturn<T, R>,\n  ): RD<R> {\n    if (args instanceof ReturnData) {\n      return this._renewSync({\n        information: () => args,\n        permission: () => args,\n        redirect: () => args,\n        success: () => args,\n      });\n    }\n    if (args instanceof Function) {\n      return this._renewSync({\n        information: args,\n        permission: args,\n        redirect: args,\n        success: args,\n      });\n    }\n\n    return this._renewSync(args);\n  }\n\n  private _renewAsync<R>({\n    information,\n    permission,\n    redirect,\n    success,\n  }: ReturnDataRenewAsync<T, R>): PromiseRD<R> {\n    return this.map({\n      success: (...args) => success(...args),\n      information: async (status, payload, messages) => {\n        const out = await information(status, payload, messages);\n        return out.maybeMap({\n          success(_, payload) {\n            return new ReturnData({ status, payload, messages });\n          },\n          else() {\n            return out;\n          },\n        });\n      },\n      redirect: async (status, payload, messages) => {\n        const out = await redirect(status, payload, messages);\n        return out.maybeMap({\n          success(_, payload) {\n            return new ReturnData({ status, payload, messages });\n          },\n          else() {\n            return out;\n          },\n        });\n      },\n      permission,\n      client: async () => new ReturnData<R, Status>({ status: 400 }),\n      timeout: async () => new ReturnData<R, Status>({ status: 900 }),\n      server: async () => new ReturnData<R, Status>({ status: 500 }),\n    });\n  }\n\n  renewAsync<R>(\n    args:\n      | ReturnDataRenewAsync<T, R>\n      | PromiseRD<R>\n      | FunctionPromiseRDwithReturn<T, R>,\n  ): PromiseRD<R> {\n    if (args instanceof Function) {\n      return this._renewAsync({\n        information: args,\n        permission: args,\n        redirect: args,\n        success: args,\n      });\n    }\n    if (args instanceof Promise) {\n      return this._renewAsync({\n        information: () => args,\n        permission: () => args,\n        redirect: () => args,\n        success: () => args,\n      });\n    }\n\n    return this._renewAsync(args);\n  }\n\n  // #endregion\n\n  // #region Static\n\n  static chain(\n    previous: RD,\n    next: FunctionPromiseRD | ReturnDataChainAsync,\n  ): PromiseRD {\n    return previous.chainAsync(next);\n  }\n\n  // #endregion\n}\n"],"names":["isClientError","isInformation","isPermission","isRedirect","isServer","isSuccess","isTimeout"],"mappings":"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"}